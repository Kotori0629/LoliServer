--- a/net/minecraft/server/level/ChunkHolder.java
+++ b/net/minecraft/server/level/ChunkHolder.java
@@ -54,7 +_,7 @@
    private CompletableFuture<ChunkAccess> f_140005_ = CompletableFuture.completedFuture((ChunkAccess)null);
    @Nullable
    private final DebugBuffer<ChunkHolder.ChunkSaveDebug> f_142984_ = null;
-   private int f_140006_;
+   public int f_140006_;
    private int f_140007_;
    private int f_140008_;
    final ChunkPos f_140009_;
@@ -67,6 +_,7 @@
    public final ChunkHolder.PlayerProvider f_140016_;
    private boolean f_140017_;
    private boolean f_140018_;
+   LevelChunk currentlyLoading; // Forge: Used to bypass future chain when loading chunks.
    private CompletableFuture<Void> f_142981_ = CompletableFuture.completedFuture((Void)null);
 
    public ChunkHolder(ChunkPos p_142986_, int p_142987_, LevelHeightAccessor p_142988_, LevelLightEngine p_142989_, ChunkHolder.LevelChangeListener p_142990_, ChunkHolder.PlayerProvider p_142991_) {
@@ -82,6 +_,20 @@
       this.f_140011_ = new ShortSet[p_142988_.m_151559_()];
    }
 
+   // CraftBukkit start
+   public LevelChunk getFullChunkNow() {
+      // Note: We use the oldTicketLevel for isLoaded checks.
+      if (!m_140083_(this.f_140006_).m_140114_(ChunkHolder.FullChunkStatus.BORDER)) return null;
+      return this.getFullChunkNowUnchecked();
+   }
+
+   public LevelChunk getFullChunkNowUnchecked() {
+      CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> statusFuture = this.m_140047_(ChunkStatus.f_62326_);
+      Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure> either = (Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>) statusFuture.getNow(null);
+      return (either == null) ? null : (LevelChunk) either.left().orElse(null);
+   }
+   // CraftBukkit end
+
    public CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> m_140047_(ChunkStatus p_140048_) {
       CompletableFuture<Either<ChunkAccess, ChunkHolder.ChunkLoadingFailure>> completablefuture = this.f_140001_.get(p_140048_.m_62445_());
       return completablefuture == null ? f_139996_ : completablefuture;
@@ -154,6 +_,7 @@
       LevelChunk levelchunk = this.m_140085_();
       if (levelchunk != null) {
          int i = this.f_142983_.m_151564_(p_140057_.m_123342_());
+         if (i < 0 || i >= this.f_140011_.length) return; // CraftBukkit - SPIGOT-6086, SPIGOT-6296
          if (this.f_140011_[i] == null) {
             this.f_140010_ = true;
             this.f_140011_[i] = new ShortOpenHashSet();
